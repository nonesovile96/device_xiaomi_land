typeattribute hal_fingerprint_default data_between_core_and_vendor_violators;

type fpc_socket, file_type;
type gx_fpd_device, dev_type;

binder_use(hal_fingerprint_default)
r_dir_file(hal_fingerprint_default, firmware_file)
set_prop(hal_fingerprint_default, system_prop)

typeattribute hal_fingerprint_default binder_in_vendor_violators;
allow hal_fingerprint_default fingerprintd_data_file:file create_file_perms;
allow hal_fingerprint_default fingerprintd_data_file:dir rw_dir_perms;
allow hal_fingerprint_default fpc_data_file:dir rw_dir_perms;
allow hal_fingerprint_default fpc_data_file:sock_file { open read write create unlink };
allow hal_fingerprint_default fpc_sysfs:file rw_file_perms;
allow hal_fingerprint_default fpc_sysfs:dir r_dir_perms;
allow hal_fingerprint_default init:unix_stream_socket connectto;
allow hal_fingerprint_default property_socket:sock_file { read write };
allow hal_fingerprint_default sysfs:file rw_file_perms;
allow hal_fingerprint_default tee_device:chr_file rw_file_perms;
allow hal_fingerprint_default uhid_device:chr_file { ioctl open read write };

allow hal_fingerprint_default storage_file:dir { search };
allow hal_fingerprint_default storage_file:lnk_file { read };
allow hal_fingerprint_default mnt_user_file:dir { search };
allow hal_fingerprint_default mnt_user_file:lnk_file { read };
allow hal_fingerprint_default sdcardfs:dir { search };
allow hal_fingerprint_default sdcardfs:file { getattr };

allow hal_fingerprint_default keystore:binder { call };
allow hal_fingerprint_default keystore:keystore_key { add_auth };
