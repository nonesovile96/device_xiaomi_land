type gx_fpd, domain, binder_in_vendor_violators;
type gx_fpd_exec, exec_type, vendor_file_type, file_type;

# gx_fpd
init_daemon_domain(gx_fpd)
binder_use(gx_fpd)
r_dir_file(gx_fpd, firmware_file)

typeattribute gx_fpd data_between_core_and_vendor_violators;

# add services
add_service(gx_fpd, gx_fpd_service);

#Allow access to goodix device
allow gx_fpd gx_fpd_device:chr_file rw_file_perms;

#Allow access to tee device
allow gx_fpd tee_device:chr_file rw_file_perms;

# Allow access to ion device
allow gx_fpd ion_device:chr_file rw_file_perms;

# Allow to create and use sockets
allow gx_fpd self:socket create_socket_perms_no_ioctl;
allow gx_fpd self:netlink_socket create_socket_perms_no_ioctl;
allow gx_fpd self:netlink_generic_socket create_socket_perms_no_ioctl;
allow gx_fpd self:netlink_kobject_uevent_socket create_socket_perms_no_ioctl;

# Allow read write sysfs
allow gx_fpd sysfs:file rw_file_perms;

#allow read/write property
set_prop(gx_fpd, system_prop)

# Ignore all logging requests
dontaudit gx_fpd storage_file:dir search;
